buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
            name = "Modmuss50"
            url = "http://maven.modmuss50.me/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath 'ModsIOUpload:ModsIOUpload:+'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'net.cazzar.gradle.modsio'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    maven {
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
    maven {
        url 'http://maven.epoxide.xyz'
    }
}

configurations {
    shade
    compile.extendsFrom shade
}


version = "0.0.2"

def ENV = System.getenv()

if (ENV.BUILD_NUMBER) {
    version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

minecraft {
    version = "1.10.2-12.18.1.2044"
    mappings = "snapshot_20160518"
    replace "@MODVERSION@", project.version
  //  makeObfSourceJar = false
    useDepAts = true
    runDir = "run"
}

group = 'TechnicalDimensions'


dependencies {
    compile 'RebornCore:RebornCore-1.10.2:+:dev'
}


processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }


jar {
    exclude "**/*.psd"
    classifier = 'universal'
}